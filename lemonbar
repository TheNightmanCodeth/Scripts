#!/usr/bin/env bash
#
# Dylan's bar script
#
# Created by Dylan Araps.
#
# Depends on: xorg-xrandr, wmctrl, mpc, lemonbar, ip


get_mon_width() {
    # Get the monitor width.
    local resolution
    local xrandr_cmd

    xrandr_cmd=("xrandr" "--nograb" "--current")

    type -p "${xrandr_cmd[@]}" >/dev/null 2>&1 && \
        resolution="$("${xrandr_cmd[@]}" | awk -F 'x|\t' '/\*/ {print $1; exit}')"

    printf "%s\n" "${resolution:-1920}"
}

ws() {
    # Format workspace "blocks".
    local ws_bg
    local ws_fg

    # If focused.
    if [[ "$2" ]]; then
        ws_bg="#F0F0F0"
        ws_fg="${color0:-#000000}"
    fi

    printf "%s%s%s%s\n" "%{A:wmctrl -s ${1}:}" \
                      "%{B${ws_bg:-${color3:-#000000}}}" \
                      "%{F${ws_fg:-#FFFFFF}}" \
                      "   ${1}   %{F-}%{B-}%{A}"
}

get_workspaces() {
    # Get the current workspace.
    local current_workspace
    local workspaces
    current_workspace="$(wmctrl -d | awk '/\*/ {print $NF}')"

    case "$current_workspace" in
        1) workspaces="$(ws 1 1)$(ws 2)$(ws 3)$(ws 4)$(ws 5)$(ws 6)" ;;
        2) workspaces="$(ws 1)$(ws 2 1)$(ws 3)$(ws 4)$(ws 5)$(ws 6)" ;;
        3) workspaces="$(ws 1)$(ws 2)$(ws 3 1)$(ws 4)$(ws 5)$(ws 6)" ;;
        4) workspaces="$(ws 1)$(ws 2)$(ws 3)$(ws 4 1)$(ws 5)$(ws 6)" ;;
        5) workspaces="$(ws 1)$(ws 2)$(ws 3)$(ws 4)$(ws 5 1)$(ws 6)" ;;
        6) workspaces="$(ws 1)$(ws 2)$(ws 3)$(ws 4)$(ws 5)$(ws 6 1)" ;;
    esac

    printf "%s\n" "$workspaces"
}


get_date() {
    # Get the date using printf's '%(T)' format.
    printf "%(%a %d %b - %l:%M %p)T\n" # shellcheck disable=SC2183
}


get_local_ip() {
    # Get the local IP address.
    local local_ip
    local_ip="$(ip route get 1 | awk -F'src' '{print $2; exit}')"
    printf "%s\n" "Local IP: ${local_ip/uid*}"
}

get_bat_percent() {
	BAT=$(acpi --battery | cut -d, -f2)
	if [[ "$(acpi --battery | cut -d: -f2 | cut -d, -f1)" == " Discharging" ]]; then
	    CHG="-"
    	else
	    CHG="+"
	fi
	echo "$BAT$CHG"
}

get_fi() {
    strength=$(awk 'NR==3 { print substr($3, 1, length($3)-1)}' /proc/net/wireless)

    if [[ ! $((strength)) > 10 ]]; then
	    percent=!!!
    elif [[ $((strength)) > 10 ]] && [[ ! $((strength)) > 20 ]]; then
	    percent=10
    elif [[ $((strength)) > 20 ]] && [[ ! $((strength)) > 30 ]]; then
	    percent=20
    elif [[ $((strength)) > 30 ]] && [[ ! $((strength)) > 40 ]]; then
	    percent=30
    elif [[ $((strength)) > 40 ]] && [[ ! $((strength)) > 50 ]]; then
	    percent=40
    elif [[ $((strength)) > 50 ]] && [[ ! $((strength)) > 60 ]]; then
	    percent=50
    elif [[ $((strength)) > 60 ]] && [[ ! $((strength)) > 70 ]]; then
	    percent=60
    elif [[ $((strength)) > 70 ]] && [[ ! $((strength)) > 80 ]]; then
	    percent=70
    elif [[ $((strength)) > 80 ]] && [[ ! $((strength)) > 90 ]]; then
	    percent=80
    elif [[ $((strength)) > 90 ]] && [[ ! $((strength)) > 100 ]]; then
	    percent=90
    elif [[ $((strength)) == 100 ]]; then
	    percent=100
    fi

    ssid=$(iwconfig wlp3s0 | grep 'ESSID:' | cut -d '"' -f2)
    if [[ $ssid == *"off"* ]]; then
	    ssid="None"
    fi
    echo "$ssid: $percent" 
}

main() {
    # Main script function.
    local font
    local height
    local width
    local workspaces
    local date
    local song
    local local_ip

    # Import colors from 'wal'.
    # https://github.com/dylanaraps/pywal
    source "${HOME}/.cache/wal/colors.sh"

    # Info that doesn't need to grabbed more than once.
    font="terminus-12"
    height="30"
    width="$(get_mon_width)"
    local_ip="$(get_local_ip)"

    # Loop and print the info.
    while :; do
	source "${HOME}/.cache/wal/colors.sh"
        workspaces="$(get_workspaces)"
        date="$(get_date)"
	battery="$(get_bat_percent)"
	wifi_strength="$(get_fi)"

        printf "%s%s%b\n" \
               "%{l}   joe    ${workspaces}" \
               "%{c}${date} " \
               "%{r}${wifi_strength}%  ${battery}      "
	sleep .1s
    done |\
	    
    # Launch lemonbar.
    lemonbar -g "1600x${height}" -f "$font" \
             -B "${color0:-#f0f0f0}" -F "${color15:-#000000}"\
             -n "bar" | bash
}


main "$@"
